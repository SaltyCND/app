{"ast":null,"code":"var _jsxFileName = \"/Users/tylern-w/Desktop/electrical_ai_app/electrical-ai-dashboard/src/ThemeContext.tsx\",\n  _s = $RefreshSig$();\n// src/ThemeContext.tsx\nimport React, { createContext, useMemo, useState } from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\n\n// Create a context to allow toggling the color mode.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ColorModeContext = /*#__PURE__*/createContext({\n  toggleColorMode: () => {}\n});\nconst CustomThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [mode, setMode] = useState('light');\n  const colorMode = useMemo(() => ({\n    toggleColorMode: () => {\n      setMode(prevMode => prevMode === 'light' ? 'dark' : 'light');\n    }\n  }), []);\n  const theme = useMemo(() => createTheme({\n    palette: {\n      mode\n    }\n  }), [mode]);\n  return /*#__PURE__*/_jsxDEV(ColorModeContext.Provider, {\n    value: colorMode,\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomThemeProvider, \"d4Wg7a/ehJsJwQbDoYd9huIJFWY=\");\n_c = CustomThemeProvider;\nexport default CustomThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"CustomThemeProvider\");","map":{"version":3,"names":["React","createContext","useMemo","useState","ThemeProvider","createTheme","CssBaseline","jsxDEV","_jsxDEV","ColorModeContext","toggleColorMode","CustomThemeProvider","children","_s","mode","setMode","colorMode","prevMode","theme","palette","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tylern-w/Desktop/electrical_ai_app/electrical-ai-dashboard/src/ThemeContext.tsx"],"sourcesContent":["// src/ThemeContext.tsx\nimport React, { createContext, useMemo, useState } from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\n\n// Create a context to allow toggling the color mode.\nexport const ColorModeContext = createContext({ toggleColorMode: () => {} });\n\nconst CustomThemeProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [mode, setMode] = useState<'light' | 'dark'>('light');\n\n  const colorMode = useMemo(\n    () => ({\n      toggleColorMode: () => {\n        setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\n      },\n    }),\n    []\n  );\n\n  const theme = useMemo(() => createTheme({ palette: { mode } }), [mode]);\n\n  return (\n    <ColorModeContext.Provider value={colorMode}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        {children}\n      </ThemeProvider>\n    </ColorModeContext.Provider>\n  );\n};\n\nexport default CustomThemeProvider;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAC/D,SAASC,aAAa,EAAEC,WAAW,QAAQ,sBAAsB;AACjE,OAAOC,WAAW,MAAM,2BAA2B;;AAEnD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,gBAAgB,gBAAGR,aAAa,CAAC;EAAES,eAAe,EAAEA,CAAA,KAAM,CAAC;AAAE,CAAC,CAAC;AAE5E,MAAMC,mBAA4D,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrF,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAmB,OAAO,CAAC;EAE3D,MAAMa,SAAS,GAAGd,OAAO,CACvB,OAAO;IACLQ,eAAe,EAAEA,CAAA,KAAM;MACrBK,OAAO,CAAEE,QAAQ,IAAMA,QAAQ,KAAK,OAAO,GAAG,MAAM,GAAG,OAAQ,CAAC;IAClE;EACF,CAAC,CAAC,EACF,EACF,CAAC;EAED,MAAMC,KAAK,GAAGhB,OAAO,CAAC,MAAMG,WAAW,CAAC;IAAEc,OAAO,EAAE;MAAEL;IAAK;EAAE,CAAC,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEvE,oBACEN,OAAA,CAACC,gBAAgB,CAACW,QAAQ;IAACC,KAAK,EAAEL,SAAU;IAAAJ,QAAA,eAC1CJ,OAAA,CAACJ,aAAa;MAACc,KAAK,EAAEA,KAAM;MAAAN,QAAA,gBAC1BJ,OAAA,CAACF,WAAW;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACdb,QAAQ;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAEhC,CAAC;AAACZ,EAAA,CAtBIF,mBAA4D;AAAAe,EAAA,GAA5Df,mBAA4D;AAwBlE,eAAeA,mBAAmB;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}