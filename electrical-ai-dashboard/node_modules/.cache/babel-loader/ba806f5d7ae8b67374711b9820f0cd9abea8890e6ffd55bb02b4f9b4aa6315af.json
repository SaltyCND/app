{"ast":null,"code":"var _jsxFileName = \"/Users/tylern-w/Desktop/electrical_ai_app/electrical-ai-dashboard/src/components/ChatInterface.tsx\",\n  _s = $RefreshSig$();\n// src/components/ChatInterface.tsx\nimport React, { useState, useRef } from 'react';\nimport { useAppSelector, useAppDispatch } from '../app/hooks';\nimport { addMessage, updateLastMessage } from '../features/chat/chatSlice';\nimport { Box, Button, TextField, Paper, Typography, Avatar, Stack } from '@mui/material';\nimport { motion } from 'framer-motion';\nimport ReactMarkdown from 'react-markdown';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport ElectricBoltIcon from '@mui/icons-material/ElectricBolt';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = () => {\n  _s();\n  // Retrieve conversation from Redux.\n  const conversation = useAppSelector(state => state.chat.conversation);\n  const dispatch = useAppDispatch();\n\n  // Local state for user input and streaming status.\n  const [input, setInput] = useState('');\n  const [streaming, setStreaming] = useState(false);\n\n  // useRef to accumulate live streaming tokens; persists across renders.\n  const liveAnswerRef = useRef(\"\");\n\n  // Voice input using the Web Speech API.\n  const startVoiceInput = () => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      alert(\"Your browser does not support speech recognition.\");\n      return;\n    }\n    const recognition = new SpeechRecognition();\n    recognition.lang = 'en-US';\n    recognition.start();\n    recognition.onresult = event => {\n      const transcript = event.results[0][0].transcript;\n      setInput(transcript);\n    };\n  };\n\n  // Voice output using the Web Speech API.\n  const speakText = text => {\n    const utterance = new SpeechSynthesisUtterance(text);\n    window.speechSynthesis.speak(utterance);\n  };\n\n  // Handle sending a message and receiving the SSE streaming response.\n  const handleSend = async e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n\n    // Dispatch the user's message.\n    dispatch(addMessage({\n      role: 'user',\n      content: input\n    }));\n    // Immediately add an empty assistant message that will be updated live.\n    dispatch(addMessage({\n      role: 'assistant',\n      content: \"\"\n    }));\n    setStreaming(true);\n    liveAnswerRef.current = \"\"; // Reset the live answer accumulator\n\n    console.log(\"Opening SSE connection for query:\", input);\n    const eventSource = new EventSource(`http://localhost:8000/query/stream?query=${encodeURIComponent(input)}`);\n    eventSource.onopen = () => {\n      console.log(\"SSE connection opened.\");\n    };\n    eventSource.onmessage = event => {\n      console.log(\"Received SSE data:\", event.data);\n      if (event.data.trim() === \"[DONE]\") {\n        eventSource.close();\n        setStreaming(false);\n        // Do not clear liveAnswerRef.current so that the final answer remains visible.\n      } else {\n        // Append the incoming token plus a space.\n        liveAnswerRef.current += event.data + \" \";\n        // Update the last assistant message in Redux with the accumulated live answer.\n        dispatch(updateLastMessage(liveAnswerRef.current));\n      }\n    };\n    eventSource.onerror = err => {\n      console.error(\"SSE error:\", err);\n      eventSource.close();\n      setStreaming(false);\n    };\n    setInput('');\n  };\n\n  // Typing indicator component with animated blinking dots.\n  const TypingIndicator = () => /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      alignItems: 'center',\n      mt: 1\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      sx: {\n        mr: 1\n      },\n      children: \"AI is typing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      spacing: 0.5,\n      children: [...Array(3)].map((_, idx) => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: 8,\n          height: 8,\n          borderRadius: '50%',\n          bgcolor: 'primary.main',\n          animation: 'blink 1.4s infinite both',\n          animationDelay: `${idx * 0.2}s`\n        }\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Chat with Electrical AI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2,\n        mb: 2,\n        maxHeight: 400,\n        overflowY: 'auto'\n      },\n      children: [conversation.map((msg, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          y: 10\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        transition: {\n          duration: 0.3\n        },\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          spacing: 1,\n          alignItems: \"flex-start\",\n          sx: {\n            mb: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              bgcolor: msg.role === 'user' ? 'primary.main' : 'secondary.main'\n            },\n            children: msg.role === 'user' ? /*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 40\n            }, this) : /*#__PURE__*/_jsxDEV(ElectricBoltIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 1.5,\n              backgroundColor: msg.role === 'user' ? '#dcf8c6' : '#f1f0f0',\n              borderRadius: 2,\n              boxShadow: 1,\n              maxWidth: '80%'\n            },\n            children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n              children: msg.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)), streaming && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          y: 10\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        transition: {\n          duration: 0.3\n        },\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          spacing: 1,\n          alignItems: \"flex-start\",\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              bgcolor: 'secondary.main'\n            },\n            children: /*#__PURE__*/_jsxDEV(ElectricBoltIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              p: 1.5,\n              backgroundColor: '#f1f0f0',\n              borderRadius: 2,\n              boxShadow: 1,\n              maxWidth: '80%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(ReactMarkdown, {\n              children: liveAnswerRef.current\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TypingIndicator, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      onSubmit: handleSend,\n      sx: {\n        display: 'flex',\n        gap: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        variant: \"outlined\",\n        placeholder: \"Type your message...\",\n        value: input,\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        disabled: streaming,\n        children: streaming ? 'Streaming...' : 'Send'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: startVoiceInput,\n        children: \"\\uD83C\\uDFA4 Voice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"Qdd6PyhsiexjZzAjtYb0O0nzt/E=\", false, function () {\n  return [useAppSelector, useAppDispatch];\n});\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useRef","useAppSelector","useAppDispatch","addMessage","updateLastMessage","Box","Button","TextField","Paper","Typography","Avatar","Stack","motion","ReactMarkdown","AccountCircleIcon","ElectricBoltIcon","jsxDEV","_jsxDEV","ChatInterface","_s","conversation","state","chat","dispatch","input","setInput","streaming","setStreaming","liveAnswerRef","startVoiceInput","SpeechRecognition","window","webkitSpeechRecognition","alert","recognition","lang","start","onresult","event","transcript","results","speakText","text","utterance","SpeechSynthesisUtterance","speechSynthesis","speak","handleSend","e","preventDefault","trim","role","content","current","console","log","eventSource","EventSource","encodeURIComponent","onopen","onmessage","data","close","onerror","err","error","TypingIndicator","sx","display","alignItems","mt","children","variant","color","mr","fileName","_jsxFileName","lineNumber","columnNumber","direction","spacing","Array","map","_","idx","width","height","borderRadius","bgcolor","animation","animationDelay","gutterBottom","p","mb","maxHeight","overflowY","msg","index","div","initial","opacity","y","animate","transition","duration","backgroundColor","boxShadow","maxWidth","component","onSubmit","gap","fullWidth","placeholder","value","onChange","target","type","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/tylern-w/Desktop/electrical_ai_app/electrical-ai-dashboard/src/components/ChatInterface.tsx"],"sourcesContent":["// src/components/ChatInterface.tsx\nimport React, { useState, useRef } from 'react';\nimport { useAppSelector, useAppDispatch } from '../app/hooks';\nimport { addMessage, updateLastMessage, ChatMessage } from '../features/chat/chatSlice';\nimport { Box, Button, TextField, Paper, Typography, Avatar, Stack } from '@mui/material';\nimport { motion } from 'framer-motion';\nimport ReactMarkdown from 'react-markdown';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport ElectricBoltIcon from '@mui/icons-material/ElectricBolt';\n\nconst ChatInterface: React.FC = () => {\n  // Retrieve conversation from Redux.\n  const conversation = useAppSelector((state) => state.chat.conversation);\n  const dispatch = useAppDispatch();\n\n  // Local state for user input and streaming status.\n  const [input, setInput] = useState<string>('');\n  const [streaming, setStreaming] = useState<boolean>(false);\n\n  // useRef to accumulate live streaming tokens; persists across renders.\n  const liveAnswerRef = useRef<string>(\"\");\n\n  // Voice input using the Web Speech API.\n  const startVoiceInput = () => {\n    const SpeechRecognition =\n      (window as any).SpeechRecognition || (window as any).webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      alert(\"Your browser does not support speech recognition.\");\n      return;\n    }\n    const recognition = new SpeechRecognition();\n    recognition.lang = 'en-US';\n    recognition.start();\n    recognition.onresult = (event: any) => {\n      const transcript = event.results[0][0].transcript;\n      setInput(transcript);\n    };\n  };\n\n  // Voice output using the Web Speech API.\n  const speakText = (text: string) => {\n    const utterance = new SpeechSynthesisUtterance(text);\n    window.speechSynthesis.speak(utterance);\n  };\n\n  // Handle sending a message and receiving the SSE streaming response.\n  const handleSend = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!input.trim()) return;\n\n    // Dispatch the user's message.\n    dispatch(addMessage({ role: 'user', content: input }));\n    // Immediately add an empty assistant message that will be updated live.\n    dispatch(addMessage({ role: 'assistant', content: \"\" }));\n    setStreaming(true);\n    liveAnswerRef.current = \"\"; // Reset the live answer accumulator\n\n    console.log(\"Opening SSE connection for query:\", input);\n    const eventSource = new EventSource(`http://localhost:8000/query/stream?query=${encodeURIComponent(input)}`);\n\n    eventSource.onopen = () => {\n      console.log(\"SSE connection opened.\");\n    };\n\n    eventSource.onmessage = (event) => {\n      console.log(\"Received SSE data:\", event.data);\n      if (event.data.trim() === \"[DONE]\") {\n        eventSource.close();\n        setStreaming(false);\n        // Do not clear liveAnswerRef.current so that the final answer remains visible.\n      } else {\n        // Append the incoming token plus a space.\n        liveAnswerRef.current += event.data + \" \";\n        // Update the last assistant message in Redux with the accumulated live answer.\n        dispatch(updateLastMessage(liveAnswerRef.current));\n      }\n    };\n\n    eventSource.onerror = (err) => {\n      console.error(\"SSE error:\", err);\n      eventSource.close();\n      setStreaming(false);\n    };\n\n    setInput('');\n  };\n\n  // Typing indicator component with animated blinking dots.\n  const TypingIndicator: React.FC = () => (\n    <Box sx={{ display: 'flex', alignItems: 'center', mt: 1 }}>\n      <Typography variant=\"body2\" color=\"textSecondary\" sx={{ mr: 1 }}>\n        AI is typing\n      </Typography>\n      <Stack direction=\"row\" spacing={0.5}>\n        {[...Array(3)].map((_, idx) => (\n          <Box\n            key={idx}\n            sx={{\n              width: 8,\n              height: 8,\n              borderRadius: '50%',\n              bgcolor: 'primary.main',\n              animation: 'blink 1.4s infinite both',\n              animationDelay: `${idx * 0.2}s`,\n            }}\n          />\n        ))}\n      </Stack>\n    </Box>\n  );\n\n  return (\n    <Box sx={{ mt: 4 }}>\n      <Typography variant=\"h5\" gutterBottom>\n        Chat with Electrical AI\n      </Typography>\n      <Paper sx={{ p: 2, mb: 2, maxHeight: 400, overflowY: 'auto' }}>\n        {conversation.map((msg: ChatMessage, index: number) => (\n          <motion.div\n            key={index}\n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.3 }}\n          >\n            <Stack direction=\"row\" spacing={1} alignItems=\"flex-start\" sx={{ mb: 1 }}>\n              <Avatar sx={{ bgcolor: msg.role === 'user' ? 'primary.main' : 'secondary.main' }}>\n                {msg.role === 'user' ? <AccountCircleIcon /> : <ElectricBoltIcon />}\n              </Avatar>\n              <Box\n                sx={{\n                  p: 1.5,\n                  backgroundColor: msg.role === 'user' ? '#dcf8c6' : '#f1f0f0',\n                  borderRadius: 2,\n                  boxShadow: 1,\n                  maxWidth: '80%',\n                }}\n              >\n                <ReactMarkdown>{msg.content}</ReactMarkdown>\n              </Box>\n            </Stack>\n          </motion.div>\n        ))}\n        {streaming && (\n          <motion.div\n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.3 }}\n          >\n            <Stack direction=\"row\" spacing={1} alignItems=\"flex-start\">\n              <Avatar sx={{ bgcolor: 'secondary.main' }}>\n                <ElectricBoltIcon />\n              </Avatar>\n              <Box\n                sx={{\n                  p: 1.5,\n                  backgroundColor: '#f1f0f0',\n                  borderRadius: 2,\n                  boxShadow: 1,\n                  maxWidth: '80%',\n                }}\n              >\n                <ReactMarkdown>{liveAnswerRef.current}</ReactMarkdown>\n                <TypingIndicator />\n              </Box>\n            </Stack>\n          </motion.div>\n        )}\n      </Paper>\n      <Box component=\"form\" onSubmit={handleSend} sx={{ display: 'flex', gap: 1 }}>\n        <TextField\n          fullWidth\n          variant=\"outlined\"\n          placeholder=\"Type your message...\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n        />\n        <Button type=\"submit\" variant=\"contained\" disabled={streaming}>\n          {streaming ? 'Streaming...' : 'Send'}\n        </Button>\n        <Button variant=\"outlined\" onClick={startVoiceInput}>\n          🎤 Voice\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ChatInterface;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}